version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: orca-liquidity-agent:production
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@timescaledb:5432/dolphin
      - SOLANA_RPC_URL=${SOLANA_RPC_URL}
      - WALLET_PRIVATE_KEY=${WALLET_PRIVATE_KEY}
      - WHIRLPOOL_PROGRAM_ID=${WHIRLPOOL_PROGRAM_ID}
      - USDC_SOL_WHIRLPOOL_ADDRESS=${USDC_SOL_WHIRLPOOL_ADDRESS}
      - SOL_MINT=${SOL_MINT}
      - USDC_MINT=${USDC_MINT}
      - DEFAULT_POSITION_LOWER_PRICE=${DEFAULT_POSITION_LOWER_PRICE}
      - DEFAULT_POSITION_UPPER_PRICE=${DEFAULT_POSITION_UPPER_PRICE}
      - DEFAULT_LIQUIDITY_AMOUNT_USDC=${DEFAULT_LIQUIDITY_AMOUNT_USDC}
      # Auto-rebalancing configuration
      - REBALANCE_ENABLED=${REBALANCE_ENABLED:-false}
      - REBALANCE_THRESHOLD_PERCENT=${REBALANCE_THRESHOLD_PERCENT:-5}
      - MIN_REBALANCE_INTERVAL_MINUTES=${MIN_REBALANCE_INTERVAL_MINUTES:-60}
      - POSITION_WIDTH_PERCENT=${POSITION_WIDTH_PERCENT:-20}
      - MAX_DAILY_REBALANCES=${MAX_DAILY_REBALANCES:-6}
      # Logging configuration
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - ENABLE_FILE_LOGGING=true
      - LOG_DIRECTORY=/app/logs
      - PORT=3000
      - HOST=0.0.0.0
    depends_on:
      timescaledb:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - app_data:/app/data
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  timescaledb:
    image: timescale/timescaledb:latest-pg14
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-dolphin}
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped
    command: postgres -c shared_preload_libraries=timescaledb -c max_connections=100 -c shared_buffers=256MB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

volumes:
  timescaledb_data:
    driver: local
  app_data:
    driver: local
  app_logs:
    driver: local
